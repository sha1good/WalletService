{"version":3,"sources":["components/Layout/Header.js","reducers/errorReducer.js","reducers/walletReducer.js","reducers/index.js","actions/types.js","store.js","components/Wallet/CreateWalletButon.js","components/Dashboard.js","components/Wallet/AddWalletPin.js","actions/WalletAction.js","App.js","serviceWorker.js","index.js"],"names":["Header","className","type","data-toggle","data-target","id","Link","to","Component","initialState","wallets","combineReducers","errors","state","action","payload","middleWare","thunk","ReactReduxDevTools","window","__REDUX_DEVTOOLS_EXTENSION__","store","navigator","userAgent","includes","createStore","rootReducer","compose","applyMiddleware","createWalletButton","Fragment","Dashboard","this","props","error","message","console","log","ecryptedPin","connect","AddWalletPin","securityKey","pin","dataSeed","onChange","bind","onSubmit","event","setState","target","name","value","preventDefault","wallet","createWalletPin","history","nextProps","classnames","placeholder","dispatch","a","axios","post","response","status","push","data","App","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.0384b0d8.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Header extends Component {\r\n  render() {\r\n    return (\r\n      <nav className=\"navbar navbar-expand-sm navbar-dark bg-primary mb-4\">\r\n        <div className=\"container\">\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-toggle=\"collapse\"\r\n            data-target=\"#mobile-nav\"\r\n          >\r\n            <span className=\"navbar-toggler-icon\" />\r\n          </button>\r\n          <div className=\"collapse navbar-collapse\" id=\"mobile-nav\">\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/dashboard\">\r\n                  Dashboard\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"navbar-nav mr-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"navbar-brand mr-0\" to=\"/dashboard\">\r\n                  Wallet\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n            <ul className=\"navbar-nav ml-auto\">\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link \" to=\"#\">\r\n                  Sign Up\r\n                </Link>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"#\">\r\n                  Login\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </nav>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;\r\n","import { GET_ERRORS } from \"../actions/types\";\r\n\r\nconst initialState = {};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_ERRORS:\r\n      return action.payload;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport function loadTodoError(error) {}\r\n","import { GET_WALLET } from \"../actions/types\";\r\n\r\nconst initialState = {\r\n  wallets: {}\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case GET_WALLET:\r\n      return {\r\n        ...state,\r\n        wallets: action.payload\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport errorReducer from \"./errorReducer\";\r\nimport walletReducer from \"./walletReducer\";\r\n\r\nexport default combineReducers({\r\n  errors: errorReducer,\r\n  wallets: walletReducer\r\n});\r\n\r\n//this is the combine reducer\r\n","export const GET_ERRORS = \"GET_ERRORS\";\r\nexport const GET_ERROR = \"GET_ERROR\";\r\nexport const GET_WALLET = \"GET_WALLET\";\r\n","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nconst initialState = {};\r\nconst middleWare = [thunk];\r\n\r\nlet store;\r\n\r\nconst ReactReduxDevTools =\r\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__();\r\n\r\nif (window.navigator.userAgent.includes(\"Chrome\") && ReactReduxDevTools) {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleWare), ReactReduxDevTools)\r\n  );\r\n} else {\r\n  store = createStore(\r\n    rootReducer,\r\n    initialState,\r\n    compose(applyMiddleware(...middleWare))\r\n  );\r\n}\r\n\r\nexport default store;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst createWalletButton = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <Link to=\"/generatePin\" className=\"btn btn-lg btn-info\">\r\n        EncryptWalletPin\r\n      </Link>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default createWalletButton;\r\n","import React, { Component } from \"react\";\r\nimport CreateWalletButton from \"./Wallet/CreateWalletButon\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass Dashboard extends Component {\r\n  render() {\r\n    const { wallets } = this.props.wallets;\r\n    const { error, message } = this.props.errors;\r\n    console.log(\"Error from Dashboard \" + error);\r\n    console.log(\"Error from Dashboard \" + message);\r\n    return (\r\n      <div className=\"wallet\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-12\">\r\n              <h1 className=\"display-4 text-center\">Wallet App</h1>\r\n              <br />\r\n              <CreateWalletButton />\r\n              <hr />\r\n            </div>\r\n            <div className=\"col-md-8 m-auto\">\r\n              <div className=\"container\">\r\n                <p>{error}</p>\r\n                <p>{message}</p>\r\n              </div>\r\n            </div>\r\n            <div className=\"jumbotron jumbotron-fluid col-md-8 m-auto\">\r\n              <div className=\"container\">\r\n                <h4 className=\"mb-2\">Copy your Encrypted Pin Below</h4>\r\n                <p>{wallets.ecryptedPin}</p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  wallets: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  wallets: state.wallets,\r\n  errors: state.errors\r\n});\r\n\r\nexport default connect(mapStateToProps)(Dashboard);\r\n","import React, { Component } from \"react\";\r\nimport classnames from \"classnames\";\r\nimport { connect } from \"react-redux\";\r\nimport { createWalletPin } from \"../../actions/WalletAction\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nclass AddWalletPin extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    this.state = {\r\n      securityKey: \"\",\r\n      pin: \"\",\r\n      dataSeed: \"\",\r\n      errors: {}\r\n    };\r\n    this.onChange = this.onChange.bind(this);\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  onChange(event) {\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  }\r\n\r\n  onSubmit(event) {\r\n    event.preventDefault();\r\n\r\n    const wallet = {\r\n      securityKey: this.state.securityKey,\r\n      pin: this.state.pin,\r\n      dataSeed: this.state.dataSeed\r\n    };\r\n\r\n    this.props.createWalletPin(wallet, this.props.history);\r\n  }\r\n\r\n  componentWillReceiveProps(nextProps) {\r\n    if (nextProps.errors) {\r\n      this.setState({ errors: nextProps.errors });\r\n    }\r\n  }\r\n  render() {\r\n    const { errors } = this.state;\r\n    return (\r\n      <div className=\"wallet\">\r\n        <div className=\"container\">\r\n          <div className=\"row\">\r\n            <div className=\"col-md-8 m-auto\">\r\n              <h5 className=\"display-5 text-center\">Encypt Your Wallet Pin</h5>\r\n              <hr />\r\n              <form onSubmit={this.onSubmit}>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control lg\", {\r\n                      \"is-invalid\": errors.securityKey\r\n                    })}\r\n                    name=\"securityKey\"\r\n                    placeholder=\"Your SecurityKey\"\r\n                    value={this.state.securityKey}\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  {errors.securityKey && (\r\n                    <div className=\"invalid-feedback\">{errors.securityKey}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control lg\", {\r\n                      \"is-invalid\": errors.pin\r\n                    })}\r\n                    name=\"pin\"\r\n                    placeholder=\"Your Pin\"\r\n                    value={this.state.pin}\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  {errors.pin && (\r\n                    <div className=\"invalid-feedback\">{errors.pin}</div>\r\n                  )}\r\n                </div>\r\n                <div className=\"form-group\">\r\n                  <input\r\n                    type=\"text\"\r\n                    className={classnames(\"form-control form-control lg\", {\r\n                      \"is-invalid\": errors.dataSeed\r\n                    })}\r\n                    name=\"dataSeed\"\r\n                    placeholder=\"Data Seed\"\r\n                    value={this.state.dataSeed}\r\n                    onChange={this.onChange}\r\n                  />\r\n\r\n                  {errors.dataSeed && (\r\n                    <div className=\"invalid-feedback\">{errors.dataSeed}</div>\r\n                  )}\r\n                </div>\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-primary btn-block mt-4\"\r\n                />\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddWalletPin.propTypes = {\r\n  errors: PropTypes.object.isRequired,\r\n  createWalletPin: PropTypes.func.isRequired\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  errors: state.errors,\r\n  error: state.error\r\n});\r\n\r\nexport default connect(mapStateToProps, { createWalletPin })(AddWalletPin);\r\n","import axios from \"axios\";\r\nimport { GET_ERRORS, GET_WALLET } from \"./types\";\r\n\r\nexport const createWalletPin = (wallet, history) => async dispatch => {\r\n  try {\r\n    let response = await axios.post(\"/api/wallet/generatePin\", wallet);\r\n    console.log(response.status);\r\n    if (response.status === 200) {\r\n      history.push(\"/dashboard\");\r\n      dispatch({\r\n        type: GET_WALLET,\r\n        payload: response.data\r\n      });\r\n      dispatch({\r\n        type: GET_ERRORS,\r\n        payload: {}\r\n      });\r\n    } else {\r\n      history.push(\"/dashboard\");\r\n      // dispatch(loadTodoError(response.error));\r\n    }\r\n  } catch (err) {\r\n    console.log(err.response);\r\n    if (err.response.data.message) {\r\n      history.push(\"/dashboard\");\r\n    }\r\n    dispatch({\r\n      type: GET_ERRORS,\r\n      payload: err.response.data\r\n    });\r\n  }\r\n};\r\n","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport Header from \"./components/Layout/Header\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Dashboard from \"./components/Dashboard\";\nimport AddWalletPin from \"./components/Wallet/AddWalletPin\";\n\nclass App extends Component {\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"App\">\n            <Header />\n            <Route exact path=\"/dashboard\" component={Dashboard} />\n            <Route exact path=\"/generatePin\" component={AddWalletPin} />\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}